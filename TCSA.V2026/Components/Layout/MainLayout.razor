@using TCSA.V2026.Services
@inherits LayoutComponentBase
@inject ThemeService ThemeService
@inject IHttpContextAccessor HttpContextAccessor
@inject IJSRuntime JS

<MudThemeProvider Theme="MyCustomTheme" @bind-IsDarkMode="@ThemeService.IsDarkMode" />
<MudPopoverProvider />
<MudSnackbarProvider />
<MudDialogProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudStaticNavDrawerToggle DrawerId="nav-drawer" Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" />
        <MudImage Src="/img/logo.png" Width="40" />
        <MudSpacer />
        <MudSwitch
            UserAttributes="@(new Dictionary<string, object> { ["id"] = "theme-toggle" })"
            ThumbIcon="@Icons.Material.Outlined.ModeNight"
            ValueChanged="ToggleTheme" 
            Value="@ThemeService.IsDarkMode" 
            Color="Color.Primary" 
            Class="ma-4" 
            T="bool" 
            Label="Toggle Light/Dark Mode" />
        <MudLink Color="Color.Default"
                 Href="https://discord.gg/aDMDET8ywB"
                 Target="_blank"
                 Class="mud-icon-button mud-button-root"
                 UserAttributes="@(new() { ["aria-label"] = "Discord", ["rel"] = "noopener noreferrer" })">
            <MudIcon Icon=@Icons.Custom.Brands.Discord />
        </MudLink>
        <MudLink Color="Color.Default"
                 Href="https://www.youtube.com/channel/UCUb14APzNlpUcDElcCEw5OA"
                 Target="_blank"
                 Class="mud-icon-button mud-button-root"
                 UserAttributes="@(new() { ["aria-label"] = "YouTube", ["rel"] = "noopener noreferrer" })">
            <MudIcon Icon=@Icons.Custom.Brands.YouTube />
        </MudLink>
        <MudLink Color="Color.Default"
                 Href="https://www.linkedin.com/school/thecsharpacademy/"
                 Target="_blank"
                 Class="mud-icon-button mud-button-root"
                 UserAttributes="@(new() { ["aria-label"] = "LinkedIn", ["rel"] = "noopener noreferrer" })">
            <MudIcon Icon=@Icons.Custom.Brands.LinkedIn />
        </MudLink>
    </MudAppBar>
    <MudDrawer id="nav-drawer" @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">
        <NavMenu />
    </MudDrawer>
    <MudMainContent Class="pt-16 pa-4">
        @Body
    </MudMainContent>
</MudLayout>


<div id="blazor-error-ui" data-nosnippet>
    An unhandled error has occurred.
    <a href="." class="reload">Reload</a>
    <span class="dismiss">ðŸ—™</span>
</div>

@code {
    private bool _drawerOpen = true;

    protected override void OnInitialized()
    {
        var themeCookie = HttpContextAccessor.HttpContext?.Request.Cookies["theme"];
        if (themeCookie != null)
        {
            ThemeService.IsDarkMode = themeCookie == "dark";
        };
    }

    private async Task ToggleTheme()
    {
        ThemeService.ToggleTheme();
        // Update cookie via JS interop or via server-side endpoint.
        await JS.InvokeVoidAsync("setCookie", "theme", ThemeService.IsDarkMode ? "dark" : "light", 365);   
    }

    MudTheme MyCustomTheme = new MudTheme()
        {
            PaletteLight = new PaletteLight()
            {
                Primary = "#1C236D",
                Secondary = "#832A77",
                AppbarBackground = "#C9436E",
                SuccessLighten = "#E0FFE0",
            },
            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Blue.Lighten1,

                DrawerText = "#FFFFFF",
                AppbarText = "#FFFFFF",
                TextPrimary = "#FFFFFF",
                TextSecondary = "#FFFFFF",
                ActionDefault = "#FFFFFF",
                LinesInputs = "#FFFFFF"
            },
        };
}


