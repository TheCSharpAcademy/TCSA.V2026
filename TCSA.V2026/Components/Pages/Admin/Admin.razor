@page "/admin"

@using Microsoft.AspNetCore.Authorization
@using TCSA.V2026.Data.DTOs
@using TCSA.V2026.Data.Models
@using TCSA.V2026.Services

@attribute [Authorize(Roles = "Admin")]

<PageTitle>Admin</PageTitle>

@rendermode @(new InteractiveServerRenderMode(prerender: false))

<MudContainer>
    <AdminToolBar></AdminToolBar>

    @if (IsLoading)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    }
    else
    {
        <MudDataGrid Class="mt-2" Dense="true" Items="@adminEvents" RowStyle="GetRowStyle">
            <Columns>
                <PropertyColumn Property="x => x.Date" Title="DateTime" />
                <PropertyColumn Property="x => x.ActivityType" Title="Activity" CellStyleFunc="@_cellStyleFunc" />
                <PropertyColumn Property="x => x.DateRequestedChanges" Title="Changes Requested" />
                <PropertyColumn Property="x => x.ActivityName" Title="Activity Name" />
                <TemplateColumn CellClass="d-flex justify-end">
                    <CellTemplate>
                        <MudStack Row>
                            <MudButton 
                                Size="@Size.Small" 
                                Variant="@Variant.Filled" 
                                Color="@Color.Primary" 
                                OnClick="@(() => NavigateToDetails(context.Item.AppUserId))">
                                Deets
                            </MudButton>
                        </MudStack>
                    </CellTemplate>
                </TemplateColumn>
            </Columns>
        </MudDataGrid>
    }
</MudContainer>

@code {
    [Inject] protected IAdminService UserService { get; set; }
    [Inject] private NavigationManager Navigation { get; set; }

    private List<AdminEventDisplay>? adminEvents { get; set; } = new();

    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        adminEvents = await UserService.GetAdminEvents();
        IsLoading = false;
    }

    private Task NavigateToDetails(string userId)
    {
        Navigation.NavigateTo($"/admin/{userId}");
        return Task.CompletedTask;
    }

    private Func<AdminEventDisplay, string> _cellStyleFunc => x =>
    {
        string style = "";

        if (x.ActivityType == ActivityType.ArticleRead)
            style += "background-color:green; color: white;";

        if (x.ActivityType == ActivityType.ProjectSubmitted)
            style += "background-color:yellow;";

        if (x.ActivityType == ActivityType.CodeReviewCompleted)
            style += "background-color:red; color:white;";

        if (x.ActivityType == ActivityType.IssueSubmitted)
            style += "background-color:purple; color: white;";

        if (x.ActivityType == ActivityType.ProjectCompleted)
            style += "background-color:blue; color: white;";

        return style;
    };
}

