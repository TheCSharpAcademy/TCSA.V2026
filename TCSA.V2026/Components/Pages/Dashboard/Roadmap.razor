@page "/dashboard/roadmap"
@using Microsoft.AspNetCore.Authorization

@using System.Security.Claims;
@using TCSA.V2026.Components.UI
@using TCSA.V2026.Data.Models
@using TCSA.V2026.Helpers
@using TCSA.V2026.Services
@using TCSA.V2026.Data.DTOs;
@attribute [Authorize]

<PageTitle>Roadmap</PageTitle>
<MudContainer>
    @if (User != null)
    {
        <DashboardToolBar User=@User></DashboardToolBar>
    }

    @if (IsLoading)
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    }
    else
    {
        if (RoadmapStages != null)
        {
            <MudTimeline TimelinePosition="TimelinePosition.Start">
                @foreach (var stage in RoadmapStages)
                {
                    <MudTimelineItem Size="Size.Large"
                                     Class="@($"{stage.Class}")"
                                     Variant="Variant.Outlined"
                                     Elevation="1">
                        <TCSARoadmapCard Tasks="stage.Tasks" />
                    </MudTimelineItem>
                }
            </MudTimeline>
        }
    }
</MudContainer>

@code {
    [Inject] private AuthenticationStateProvider AuthenticationState { get; set; }
    [Inject] private NavigationManager NavigationManager { get; set; }
    [Inject] private IUserService UserService { get; set; }

    private ApplicationUser User { get; set; }
    private int ReviewsCount = 0;
    private int IssuesCount = 0;
    private bool IsLoading = true;
    private string UserId = string.Empty;
    private TimeSpan LoadTime = TimeSpan.Zero;
    private Level UserLevel { get; set; }

    public static List<int> CompletedProjects = new();

    public static List<RoadmapStage> RoadmapStages = new();

    protected override async Task OnInitializedAsync()
    {
        var startTime = DateTime.UtcNow;
        var AuthSate = await AuthenticationState.GetAuthenticationStateAsync();

        if (!AuthSate.User.Identity.IsAuthenticated)
        {
            NavigationManager.NavigateTo("Account/Login");
        }

        var claims = AuthSate.User;
        UserId = "2bafd46a-3199-4857-8388-00cf0d2af752";
        User = await UserService.GetDetailedUserById(UserId);
        CompletedProjects = User.DashboardProjects.Where(p => p.IsCompleted).Select(p => p.ProjectId).ToList();

        ReviewsCount = User.CodeReviewProjects != null
        ? User.CodeReviewProjects.Where(x => x.DashboardProject.IsCompleted).Count()
        : 0;

        IssuesCount = User.Issues != null ? User.Issues.Count(x => !x.IsClosed) : 0;

        RoadmapStages = RoadmapHelper.GetRoadmap(User.Level, CompletedProjects, ReviewsCount, IssuesCount);

        LoadTime = DateTime.UtcNow - startTime;
        IsLoading = false;
    }
}

<style>
    .custom-color-green .mud-timeline-item-dot .mud-timeline-item-dot-inner {
        background-color: green !important;
        border-color: green !important;
    }

    .custom-color-olivegreen .mud-timeline-item-dot .mud-timeline-item-dot-inner {
        background-color: darkolivegreen !important;
        border-color: darkolivegreen !important;
    }

    .custom-color-yellow .mud-timeline-item-dot .mud-timeline-item-dot-inner {
        background-color: yellow !important;
        border-color: yellow !important;
    }

    .custom-color-orange .mud-timeline-item-dot .mud-timeline-item-dot-inner {
        background-color: #FF6600 !important;
        border-color: #FF6600 !important;
    }

    .custom-color-red .mud-timeline-item-dot .mud-timeline-item-dot-inner {
        background-color: red !important;
        border-color: red !important;
    }

    .custom-color-purple .mud-timeline-item-dot .mud-timeline-item-dot-inner {
        background-color: purple !important;
        border-color: purple !important;
    }

    .custom-color-brown .mud-timeline-item-dot .mud-timeline-item-dot-inner {
        background-color: saddlebrown !important;
        border-color: saddlebrown !important;
    }

    .custom-color-gray .mud-timeline-item-dot .mud-timeline-item-dot-inner {
        background-color: dimgray !important;
        border-color: dimgray !important;
    }

    .custom-color-blue .mud-timeline-item-dot .mud-timeline-item-dot-inner {
        background-color: blue !important;
        border-color: blue !important;
    }

    .custom-color-black .mud-timeline-item-dot .mud-timeline-item-dot-inner {
        background-color: black !important;
        border-color: black !important;
    }
</style>

