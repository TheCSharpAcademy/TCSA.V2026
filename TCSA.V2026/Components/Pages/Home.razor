@page "/"
@using TCSA.V2026.Data.Curriculum
@using TCSA.V2026.Data.DTOs
@using TCSA.V2026.Data.Models
<PageTitle>Home</PageTitle>

@if (IsLoading)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <MudContainer MaxWidth="MaxWidth.Large" Class="mt-10 mb-10">
        <MudPaper Class="pa-10" Elevation="4">
            <MudGrid>
                <MudItem xs="12" md="6" Class="responsive-center">
                    <MudText Typo="Typo.h3" Class="responsive-banner font-weight-bold" Color="Color.Primary">
                        Learn .NET/C# With Real Projects
                    </MudText>
                    <MudText Class="mt-4">
                        Build real-world skills in .NET and C# through hands-on projects, guided practice, and expert mentoring. Our course is practical, engaging, and
                        <MudLink Href="https://exercism.org" Target="_blank">100% free, forever</MudLink>.
                    </MudText>

                    <MudStack Row="true" Spacing="2" Class="mt-6">
                        <MudButton OnClick="@(() => NavigateToRegistration())"
                                   Variant="Variant.Filled"
                                   Color="Color.Primary"
                                   Size="Size.Large">Sign up for free</MudButton>
                    </MudStack>
                </MudItem>

                <MudItem xs="12" md="6" Class="d-flex justify-center align-center">
                    <MudImage Src="img/banners/main-banner.gif"
                              Alt="Learn .NET with Projects"
                              Style="max-width:70%; height:auto; border-radius: 8px;" />
                </MudItem>
            </MudGrid>
        </MudPaper>
    </MudContainer>

    @* <MudText>LoadTime: @LoadTime.TotalSeconds.ToString()</MudText> *@

    <MudContainer MaxWidth="MaxWidth.Large" Class="mt-10">
        <MudText Typo="Typo.h4"
                 Color="Color.Primary"
                 Align="Align.Center"
                 Style="font-weight: 500;"
                 Class="mb-2">
            First Steps
        </MudText>

        <MudText Typo="Typo.subtitle1"
                 Align="Align.Center"
                 Class="mb-6 text-secondary">
            Get started with our program by reading and following the instructions in these articles.
            If possible, follow them in order. They cover everything you need to prepare for your C# journey.
        </MudText>

        <MudGrid Class="mt-5">
            @foreach (var article in Articles.Where(x => x.Area == Area.StartHere && x.Id != 9)) // not showing "Console App" Article
            {
                <MudItem xs="12" sm="6" md="3">
                    <div class="clickable-card" @onclick="() => NavigateToArticle(article, false)">
                        <MudCard Style="height: 100%;" Elevation="4" Class="hover-expand">
                            <MudCardContent Class="d-flex justify-center mt-4 flex-grow-0">
                                <MudImage Src="@($"img/icons/{article.IconUrl}")"
                                          Alt="@article.Title"
                                          Style="width: 100px; height: 100px; object-fit: cover;" />
                            </MudCardContent>
                            <MudCardContent Class="mb-5">
                                <MudText Class="mb-3 font-weight-bold"
                                         Align="Align.Center"
                                         Color="Color.Primary"
                                         Typo="Typo.h5">
                                    @article.Title
                                </MudText>
                                <MudText Class="mb-10" Typo="Typo.body2">@article.Description</MudText>
                            </MudCardContent>
                        </MudCard>
                    </div>

                </MudItem>
            }
        </MudGrid>
    </MudContainer>

    <MudContainer MaxWidth="MaxWidth.Large" Class="mt-10">
        <MudText Typo="Typo.h4"
                 Align="Align.Center"
                 Color="Color.Primary"
                 Style="font-weight: 500;"
                 Class="mb-2 mt-5">
            Console Apps
        </MudText>
        <MudGrid Class="mt-3">
            @foreach (var p in Projects.Where(x => x.Area == Area.Console && x.Id != 52 && x.Id != 75))
            {
                <MudItem xs="12" sm="6" md="3">
                    <div class="clickable-card" @onclick="() => NavigateToArticle(p, true)">
                        <MudCard Style="height: 100%;" Elevation="4" Class="hover-expand">
                            <MudCardContent Class="d-flex justify-center mt-4 flex-grow-0">
                                <MudImage Src="@($"img/icons/{p.IconUrl}")"
                                          Alt="@p.Title"
                                          Style="width: 100px; height: 100px; object-fit: cover;" />
                            </MudCardContent>
                            <MudCardContent>
                                <MudText Class="mb-3"
                                         Align="Align.Center"
                                         Typo="Typo.h5"
                                         Color="Color.Primary">
                                    @p.Title
                                </MudText>
                                <MudText Align="Align.Center"
                                         Class="mb-10"
                                         Typo="Typo.body2">@p.Description</MudText>
                            </MudCardContent>
                        </MudCard>
                    </div>
                </MudItem>
            }
        </MudGrid>

    </MudContainer>

    @foreach (var a in Areas)
    {
        <MudContainer MaxWidth="MaxWidth.Large" Class="mt-12">
            <div style="display: flex; justify-content: center; align-items: center; gap: 1rem;">
                @if (!string.IsNullOrEmpty(a.TitleImgUrl))
                {
                    <MudImage Src="@($"img/titles/{a.TitleImgUrl}")"
                              Alt="@a.Area.ToString()"
                              Style="width: 50px; height: 50px; object-fit: cover;" />
                }
                <MudText Color="Color.Primary" Typo="Typo.h4" Class="text-primary">
                    @a.Title
                </MudText>
            </div>

            <MudText Typo="Typo.subtitle1" Align="Align.Center" Class="mb-6 text-secondary">
                @a.Description
            </MudText>

            <MudGrid Class="mt-5 d-flex flex-wrap justify-center">
                @foreach (var p in a.Projects)
                {
                    <MudItem xs="12" sm="6" md="3" Class="d-flex">
                        <div class="clickable-card" @onclick="() => NavigateToArticle(p, true)">
                            <MudCard Style="height: 100%;" Elevation="4" Class="hover-expand">
                                <MudCardContent Class="d-flex justify-center mt-4 flex-grow-0">
                                    <MudImage Src="@($"img/icons/{p.IconUrl}")"
                                              Alt="@p.Title"
                                              Style="width: 100px; height: 100px; object-fit: cover;" />
                                </MudCardContent>

                                <MudCardContent Class="flex-grow-1 d-flex flex-column justify-between">
                                    <MudText Class="mb-3"
                                             Color="Color.Primary"
                                             Align="Align.Center"
                                             Typo="Typo.h5">
                                        @p.Title
                                    </MudText>
                                    <MudText Class="mb-10" Typo="Typo.body2">@p.Description</MudText>
                                </MudCardContent>
                            </MudCard>
                        </div>
                    </MudItem>
                }
            </MudGrid>
        </MudContainer>
    }

}

@code {
    [Inject] private NavigationManager Navigation { get; set; }

    protected List<Project> Projects = new();
    protected List<Article> Articles = new();
    protected List<IndexAreaInfo> Areas = new();
    protected Project CertificationProject = new();
    protected Article ConsoleArticle = new();
    protected Article GraduationArticle = new();

    private TimeSpan LoadTime = TimeSpan.Zero;
    private bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
         var startTime = DateTime.UtcNow;

        Articles = ArticleHelper.GetArticles();
        Projects = ProjectHelper.GetProjects();
        CertificationProject = Projects.Single(x => x.Id == 75);
        ConsoleArticle = Articles.Single(x => x.Id == 9);
        GraduationArticle = Articles.Single(x => x.Id == 10);

        GetAreas();

        LoadTime = DateTime.UtcNow - startTime;

        IsLoading = false;
    }

    private void GetAreas()
    {
        var areas = new List<Area> { Area.StartApplying, Area.MVC, Area.Angular, Area.React, Area.Blazor, Area.MAUI, Area.Auth, Area.Azure, Area.SQL, Area.GraduationProject, Area.MonthlyChallenge, Area.FreestyleProject };

        var titlePics = new List<string>
        {
            "apply-title.png",
            "mvc-title.png",
            "angular-title.png",
            "react-title.png",
            "blazor-title.png",
            "maui-title.png",
            "aa-title.png",
            "azure-title.png",
            "sql-title.png",
            string.Empty,
            string.Empty,
            string.Empty
        };
        var titles = new List<string>
        {
            "Apply for Jobs",
            "ASP.NET Core MVC",
            "Angular",
            "React",
            "Blazor",
            "MAUI",
            "Authorization and Authentication",
            "Azure",
            "SQL",
            "Graduation Projects",
            "Challenge Projects",
            "Freestyle Projects"
        };

        var descriptions = new List<string>
        {
            "With these projects, you'll showcase your work and start applying for jobs.",
            "Learn the fundamentals of ASP.NET MVC",
            "Learn how .NET works together with this powerful front-end framework",
            "Learn how .NET works together with this powerful front-end framework",
            "Learn the latest .NET solution for web development",
            "Learn this fantastic technology to build apps for Android, iOS, MacOs and Windows.",
            "Learn to secure applications using .NET/C#",
            "Get started in cloud computing deploying applications to Microsoft's state-of-the-art cloud solution.",
            "Learn the language used to communicate with databases.",
            "Transfer all your acquired knowledge to build and showcase an impressive application.",
            "Test your knowledge with a challenge provided by a real-world company given to job candidates.",
            "Bring your amazing idea to life with a professional standard project."
        };

        var ids = new List<string>
        {
            "jobs-area",
            "mvc-area",
            "angular-area",
            "react-area",
            "blazor-area",
            "maui-area",
            "auth-area",
            "cloud-area",
            "sql-area",
            "flagship-area",
            "challenges-area",
            "freestyle"
        };

        for (int i = 0; i < areas.Count; i++)
        {
            Areas.Add(new IndexAreaInfo
                {
                    Projects = areas[i] == Area.SQL
                    ? Projects.Where(x => x.Area == areas[i] && !x.IsClosed).ToList()
                    : Projects.Where(x => x.Area == areas[i])
                    .ToList(),
                    TitleImgUrl = titlePics[i],
                    Title = titles[i],
                    Description = descriptions[i],
                    Id = ids[i]
                });
        }
    }

    private Task NavigateToArticle(Article article, bool isProject)
    {
        var path = isProject ? "project" : "article";
        Navigation.NavigateTo($"/{path}/{article.Id}/{article.Slug}");
        return Task.CompletedTask;
    }

    private Task NavigateToRegistration()
    {
        Navigation.NavigateTo($"Account/Register", forceLoad: true);
        return Task.CompletedTask;
    }
}

<style>
    .clickable-card {
        cursor: pointer;
        width: 100%;
        height: 90%;
    }

    .hover-expand {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

        .hover-expand:hover {
            transform: scale(1.02);
            box-shadow: 0 8px 16px rgba(0,0,0,0.2);
        }
</style>
