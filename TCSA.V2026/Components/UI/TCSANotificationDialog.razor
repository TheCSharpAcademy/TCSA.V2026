@using TCSA.V2026.Data.DTOs
<MudDialog Style="max-height: 300px">
    <TitleContent>
        <MudText Typo="Typo.h6">@MudDialog.Title</MudText>
    </TitleContent>
    <DialogContent>
        @if (Notifications != null && Notifications.Any())
        {
            @foreach (var n in Notifications)
            {
                <div class="d-flex px-4 py-3 align-center gap-2" style="@(n.IsActive ? "background-color: rgba(66, 165, 245, .3)" : "")">
                    <MudImage Src="@GetIcon(n.Description, n.IconUrl)" Width="30" Class="mr-3" />
                    <MudText>@n.Description</MudText>
                </div>
                <MudDivider />
            }
        } else
        {
            <MudText Typo="Typo.body1">
                You donâ€™t have any notifications at the moment. Enjoy your day!
            </MudText>
        }

    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }
    [Parameter] public IEnumerable<TCSANotificationItem> Notifications { get; set; }

    private string GetIcon(string description, string iconUrl)
    {
        return description.Contains("belt") ? $"img/belts/{iconUrl}" : $"img/icons/{iconUrl}";
    }

    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();
}
