@using TCSA.V2026.Data.Models
@using TCSA.V2026.Data.Models.Responses
@using TCSA.V2026.Services
<MudDialog>
    <TitleContent>
        <MudText Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Send" Class="mr-3 mb-n1" />
            @MudDialog.Title
        </MudText>
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="GithubUrl" Label=@(ProjectId == 75 ? "Freecodecamp URL" : "GithubUrl") />
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Error" OnClick="Submit">Submit</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [Inject] protected ICommunityService CommunityService { get; set; }
    [Inject] protected IProjectService ProjectService { get; set; }
    [CascadingParameter] private IMudDialogInstance MudDialog { get; set; }
    [Parameter] public int ProjectId { get; set; }
    [Parameter] public bool IsIssue { get; set; }
    [Parameter] public ApplicationUser User { get; set; }

    public string GithubUrl = string.Empty;

    private async Task Submit() 
    {
        var result = new BaseResponse();
        if (IsIssue)
        {
            result = await CommunityService.SubmitIssueToReview(ProjectId, GithubUrl);
        } 
        else
        {
            result = await ProjectService.PostArticle(ProjectId, User.Id, GithubUrl, false);
        }

        MudDialog.Close(DialogResult.Ok(result.Status));
    }
    
    private void Cancel() => MudDialog.Cancel();
}
